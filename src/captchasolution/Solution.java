package captchasolution;
import java.util.Objects;
/**
 *
 * @author Paul
 */
public class Solution {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        //Variable with Puzzel input
        String values = "237369991482346124663395286354672985457326865748533412"
        + "179778188397835279584149971999798512279429268727171755461418"
        + "974558538246429986747532417846157526523238931351898548279549"
        + "456694488433438982744782258279173323381571985454236569393975"
        + "735715331438256795579514159946537868358735936832487422938678"
        + "194757687698143224139243151222475131337135843793611742383267"
        + "186158665726927967655583875485515512626142935357421852953775"
        + "733748941926983377725386196187486131337458574829848723711355"
        + "929684625223564489485597564768317432893836629255273452776232"
        + "319265422533449549956244791565573727762687439221862632722277"
        + "129613329167189874939414298584616496839223239197277563641853"
        + "746193232543222813298195169345186499866147586559781523834595"
        + "683496151581546829112745533347796213673814995849156321674379"
        + "644323159259131925444961296821167483628812395391533572555624"
        + "159939279125341335147234653572977345582135728994395631685618"
        + "135563662689854691976843435785879952751266627645653981281891"
        + "643823717528757341136747881518611439246877373935758151119185"
        + "587921332175189332436522732144278613486716525897262879287772"
        + "969529445511736924962777262394961547579248731343245241963914"
        + "775991292177151554446695134653596633433171866618541957233463"
        + "548142173235821168156636824233487983766612338498874251672993"
        + "917446366865832618475491341253973267556113323245113845148121"
        + "546526396995991171739837147479978645166417988918289287844384"
        + "513974369397974378819848552153961651881528134624869454563488"
        + "858625261356763562723261767873542683796675797124322382732437"
        + "235544965647934514871672522777378931524994784845817584793564"
        + "974285139867972185887185987353468488155283698464226415951583"
        + "138352839943621294117262483559867661596299753986347244786339"
        + "543174594266422815794658477629829383461829261994591318851587"
        + "963554829459353892825847978971823347219468516784857348649693"
        + "185172199398234123745415271222891161175788713733444497592853"
        + "221743138324235934216658323717267715318744537689459113188549"
        + "896737581637879552568829548365738314593851221113932919767844"
        + "137362623398623853789938824592"; 
        
        int [] result = convertString(values);
        //Prints output
        System.out.println("Sum of matching digits is: "+sumMatching(result));
    }
    
    public static int sumMatching(int [] result){
        int sum = 0;
        
        for (int i = 0; i < result.length; i++) {
            //Checks if the current index is the last and breaks out loop
            if(i == result.length-1){
                //sum += d.get(i);
                break;
            //Check if the current index is the same as next index
            }else if (Objects.equals(result[i], result[i+1])) {
                //Adds if those indexes match
                sum += result[i];          
            }
        }
        //Checks if the fist and the last index matches
        if(Objects.equals(result[0], result[result.length-1])){
            //Adds to sum
            sum += result[0];
        } 
        return sum;
    }
    
    public static int [] convertString (String values){
        //Create string array and split values into array
        String[] valueArray = values.split("");
        //Create int array with the legnth of valueArray
        int [] result = new int[valueArray.length];
        for (int i = 0; i < result.length; i++) {
            //Parses the string array value to int and saves it to int result array
            result[i] = Integer.parseInt(valueArray[i]);
        }
        return result;
    }
}


